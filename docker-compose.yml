version: "3.3"
services:
  backend:
    hostname: app
    container_name: banners_service
    image: milchenko/banners_service
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - server

  postgres:
    hostname: postgres
    container_name: postgresql
    image: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d movies_library"]
      interval: 2s
      timeout: 2s
      retries: 5
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: banners_db
      POSTGRES_PASSWORD: admin
      DATABASE_HOST: postgres
    volumes:
      - data:/var/lib/postgresql/data
    networks:
      - server

  redis:
    hostname: redis
    container_name: redis
    image: redis:6.2-alpine
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 2s
      timeout: 2s
      retries: 5
    restart: always
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: qwerty
    volumes:
      - cache:/data
    networks:
      - server

volumes:
  data:
    driver: local
  cache:
    driver: local

networks:
  server:
    driver: bridge
    name: "server"
