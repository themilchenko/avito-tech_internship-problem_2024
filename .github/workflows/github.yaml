name: actions
on: [push]

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.21
      - uses: actions/checkout@v3
      - name: Build the project
        run: make local_build
  golangci-lint:
    name: lint
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: -c configs/.golangci.yaml
  build_push_api:
    name: build and push api
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./deployments/api/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/banners_service:latest
  build_and_push:
    needs:
      - build_push_api
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: copy files via ssh secrets
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          passphrase: ${{ secrets.SSH_PASSPHRASE}}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "./docker-compose.yml, configs/"
          target: "banners_backend"
          rm: true
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          passphrase: ${{ secrets.SSH_PASSPHRASE}}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker rm -f banners_service banners_postgresql banners_redis

            cd ~/banners_backend
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/banners_service:latest
            docker compose up -d
